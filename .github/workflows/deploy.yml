# ═══════════════════════════════════════════════════════════════════════════
# Deploy Workflow - GitHub Pages Deployment Pipeline
# ═══════════════════════════════════════════════════════════════════════════
#
# Purpose: Build and deploy production site to GitHub Pages
#
# Triggers:
#   - Every push to main branch (automatic)
#   - Manual trigger via GitHub UI (workflow_dispatch)
#
# Jobs:
#   1. Build - Compile optimized production bundle
#   2. Deploy - Publish to GitHub Pages
#
# Environment Variables:
#   - VITE_SANITY_PROJECT_ID: Sanity CMS project ID
#   - VITE_SANITY_DATASET: Sanity dataset ('production')
#   - VITE_PUBLIC_BASE: Base URL path (/{repo-name}/)
#
# Deployment:
#   - Target: GitHub Pages (https://{user}.github.io/{repo}/)
#   - Environment: github-pages
#   - Base path: Auto-configured from repo name
#
# Concurrency:
#   - Only one deployment at a time
#   - Newer deployments cancel in-progress ones
#
# Permissions:
#   - contents: read (checkout code)
#   - pages: write (deploy to Pages)
#   - id-token: write (OIDC authentication)
#
# Success Criteria:
#   - Production build completes
#   - dist/ directory is not empty
#   - GitHub Pages deployment succeeds
#
# ═══════════════════════════════════════════════════════════════════════════

name: Deploy (Vite + GitHub Pages)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build:
    name: Build for Production
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v6
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Build production bundle
        env:
          VITE_SANITY_PROJECT_ID: ${{ secrets.VITE_SANITY_PROJECT_ID || '' }}
          VITE_SANITY_DATASET: ${{ secrets.VITE_SANITY_DATASET || 'production' }}
          VITE_PUBLIC_BASE: /${{ github.event.repository.name }}/
        run: npm run build

      - name: Verify build output
        run: |
          if [ ! -d "dist" ] || [ -z "$(ls -A dist)" ]; then
            echo "::error::Build failed or produced empty dist directory"
            exit 1
          fi
          echo "Build successful ✓"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v4
        with:
          path: dist

  deploy:
    name: Deploy to GitHub Pages
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
