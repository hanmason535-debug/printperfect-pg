name: Advisory Policy (non-blocking)

on:
  pull_request:
    types: [opened, synchronize, reopened, edited]

permissions:
  contents: read
  pull-requests: write

jobs:
  advise:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4

      - name: Detect changed files
        id: diff
        shell: bash
        run: |
          set +e
          base="${{ github.base_ref || 'main' }}"
          git fetch origin "$base" --depth=1 || true
          git diff --name-only origin/"$base"...HEAD > changed.txt || true
          {
            echo "changed<<EOF"
            cat changed.txt || true
            echo "EOF"
          } >> "$GITHUB_OUTPUT"

      - name: Compose advisory message
        id: compose
        shell: bash
        run: |
          set +e
          CHANGED="${{ steps.diff.outputs.changed }}"
          MSG="### ℹ️ Advisory checks (non-blocking)\n"
          NEEDS=false

          # CHANGELOG hint if code paths changed
          if echo "$CHANGED" | grep -Eq '(src/|sanity/|seed/|package|vite|tsconfig|tailwind|public/)'; then
            if ! echo "$CHANGED" | grep -q 'CHANGELOG\.md'; then
              MSG+="- Update **CHANGELOG.md** for code changes.\n"
              NEEDS=true
            fi
          fi

          # GROQ hint (check actual file content)
          if [ -n "$CHANGED" ]; then
            while IFS= read -r f; do
              if [ -f "$f" ] && echo "$f" | grep -qE '\.tsx?$'; then
                if grep -q "from ['\"]groq['\"]" "$f" 2>/dev/null; then
                  MSG+="- Use **plain string** GROQ; remove \`import 'groq'\` in \`$f\`.\n"
                  NEEDS=true
                fi
              fi
            done <<< "$CHANGED"
          fi

          # Protected UI/schema edits?
          if echo "$CHANGED" | grep -Eq 'src/components/(ServicesGrid|Portfolio|Contact|Header|HeroSection)\.tsx|sanity/schemaTypes/|sanity/schema\.ts'; then
            MSG+="- Protected UI/schema files changed. Add \`UI change approved: YES\` in PR body if intended.\n"
            NEEDS=true
          fi

          # Agent field check
          body="$(jq -r '.pull_request.body // ""' < "$GITHUB_EVENT_PATH" 2>/dev/null || echo "")"
          if ! echo "$body" | grep -qiE '^Agent:\s*(Lovable|Codex|Gemini|Human)'; then
            MSG+="- Add \`Agent:\` line in PR body (Lovable | Codex | Gemini | Human).\n"
            NEEDS=true
          fi

          if [ "$NEEDS" = true ]; then
            {
              echo "msg<<EOF"
              echo -e "$MSG"
              echo "EOF"
            } >> "$GITHUB_OUTPUT"
          fi

      - name: Post advisory comment
        if: "${{ steps.compose.outputs.msg && steps.compose.outputs.msg != '' }}"
        uses: actions/github-script@v8
        env:
          BODY: "${{ steps.compose.outputs.msg }}"
        with:
          script: |
            const body = process.env.BODY;
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              per_page: 50
            });
            const prev = comments.find(c => c.user?.type === 'Bot' && c.body?.startsWith('### ℹ️ Advisory checks'));
            if (prev) {
              await github.rest.issues.deleteComment({ owner: context.repo.owner, repo: context.repo.repo, comment_id: prev.id });
            }
            await github.rest.issues.createComment({ owner: context.repo.owner, repo: context.repo.repo, issue_number: context.payload.pull_request.number, body });
